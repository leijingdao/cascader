{"version":3,"sources":["webpack:///./examples/dynamic-options.js"],"names":["addressOptions","label","isLeaf","value","Demo","state","inputValue","options","onChange","selectedOptions","console","log","setState","map","o","join","loadData","targetOption","length","loading","setTimeout","children","render","React","Component","ReactDOM","document","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,iBAAiB,CAAC;AACtBC,SAAO,IADe;AAEtBC,UAAQ,KAFc;AAGtBC,SAAO;AAHe,CAAD,EAIpB;AACDF,SAAO,IADN;AAEDC,UAAQ,KAFP;AAGDC,SAAO;AAHN,CAJoB,CAAvB;;IAUMC,I;;;;;;;;;;;;wJACJC,K,GAAQ;AACNC,kBAAY,EADN;AAENC,eAASP;AAFH,K,QAKRQ,Q,GAAW,UAACL,KAAD,EAAQM,eAAR,EAA4B;AACrCC,cAAQC,GAAR,CAAYR,KAAZ,EAAmBM,eAAnB;AACA,YAAKG,QAAL,CAAc;AACZN,oBAAYG,gBAAgBI,GAAhB,CAAoB;AAAA,iBAAKC,EAAEb,KAAP;AAAA,SAApB,EAAkCc,IAAlC,CAAuC,IAAvC;AADA,OAAd;AAGD,K,QAEDC,Q,GAAW,UAACP,eAAD,EAAqB;AAC9B,UAAMQ,eAAeR,gBAAgBA,gBAAgBS,MAAhB,GAAyB,CAAzC,CAArB;AACAD,mBAAaE,OAAb,GAAuB,IAAvB;AACA;AACAC,iBAAW,YAAM;AACfH,qBAAaE,OAAb,GAAuB,KAAvB;AACAF,qBAAaI,QAAb,GAAwB,CAAC;AACvBpB,iBAAUgB,aAAahB,KAAvB,8BADuB;AAEvBE,iBAAO;AAFgB,SAAD,EAGrB;AACDF,iBAAUgB,aAAahB,KAAvB,8BADC;AAEDE,iBAAO;AAFN,SAHqB,CAAxB;AAOA,cAAKS,QAAL,CAAc;AACZL,6BAAa,MAAKF,KAAL,CAAWE,OAAxB;AADY,SAAd;AAGD,OAZD,EAYG,IAZH;AAaD,K;;;iBAEDe,M,qBAAS;AACP,WACE;AAAC,kEAAD;AAAA;AACE,iBAAS,KAAKjB,KAAL,CAAWE,OADtB;AAEE,kBAAU,KAAKS,QAFjB;AAGE,kBAAU,KAAKR,QAHjB;AAIE;AAJF;AAME,6EAAO,OAAO,KAAKH,KAAL,CAAWC,UAAzB,EAAqC,cAArC;AANF,KADF;AAUD,G;;;EA3CgB,6CAAKiB,CAACC,S;;AA8CzB,iDAAQC,CAACH,MAAT,CAAgB,4DAAC,IAAD,OAAhB,EAA0BI,SAASC,cAAT,CAAwB,iBAAxB,CAA1B,E","file":"examples/dynamic-options.js","sourcesContent":["/* eslint-disable no-console */\nimport 'rc-cascader/assets/index.less';\nimport Cascader from 'rc-cascader';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst addressOptions = [{\n  label: '福建',\n  isLeaf: false,\n  value: 'fj',\n}, {\n  label: '浙江',\n  isLeaf: false,\n  value: 'zj',\n}];\n\nclass Demo extends React.Component {\n  state = {\n    inputValue: '',\n    options: addressOptions,\n  }\n\n  onChange = (value, selectedOptions) => {\n    console.log(value, selectedOptions);\n    this.setState({\n      inputValue: selectedOptions.map(o => o.label).join(', '),\n    });\n  }\n\n  loadData = (selectedOptions) => {\n    const targetOption = selectedOptions[selectedOptions.length - 1];\n    targetOption.loading = true;\n    // 动态加载下级数据\n    setTimeout(() => {\n      targetOption.loading = false;\n      targetOption.children = [{\n        label: `${targetOption.label}动态加载1`,\n        value: 'dynamic1',\n      }, {\n        label: `${targetOption.label}动态加载2`,\n        value: 'dynamic2',\n      }];\n      this.setState({\n        options: [...this.state.options],\n      });\n    }, 1000);\n  }\n\n  render() {\n    return (\n      <Cascader\n        options={this.state.options}\n        loadData={this.loadData}\n        onChange={this.onChange}\n        changeOnSelect\n      >\n        <input value={this.state.inputValue} readOnly />\n      </Cascader>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/dynamic-options.js"],"sourceRoot":""}